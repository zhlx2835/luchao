<%@ page import="com.autonomy.client.*" %>
<%@ page import="com.autonomy.portlet.constants.CommonConstants"%>
<%@ page import="com.autonomy.UAClient.*" %>

<%
request.setCharacterEncoding("utf-8");
response.setContentType("text/html; charset=utf-8");
%>


<%@ include file="/user/home/CheckPortal.jspf" %>
<%
//
//Retrieve roles object
//
RolesInfo CurrentRoles = CurrentPortal.getRolesObject();

// is there already a user entry in the session?
// 	if so, read which page the portal should display
// 	if not, try to read user from UAServer
UserInfo CurrentUser = (UserInfo) session.getAttribute(CurrentPortal.PORTAL_BACKEND_LOCATION + "CurrentUser");
if(CurrentUser == null)
{
	// log in as default user
	boolean bLogInAsDefaultUser = true;
	SecurityInfo CurrentSecurity = CurrentPortal.getSecurityObject();

	if(CurrentSecurity.getKeyByName("LoginMethod", "autonomy").equals("ntlm") )
	{
		CurrentPortal.LogFull("CheckUser: NTLM Authenticating...");

		String sRemoteUser = request.getRemoteUser();
		if(StringUtils.strValid(sRemoteUser))
		{
			//successfully got NTLM header, now extract username and domain from it
			String sUserName = getUsernameFromNTLMHeader(sRemoteUser);
			String sDomain   = getDomainFromNTLMHeader(sRemoteUser);

			// read user's entry in UAServer.
			UserInfo NTLMUser = null;
			try
			{
				NTLMUser = CurrentPortal.getUserInfo(sUserName);
			}
			catch(Exception e)
			{
				// exception is thrown if user does not have an entry on UAServers
			}

			if( NTLMUser == null )
			{
				// currently no entry in Community for this user so create one.
				// use username as password since we don't know and will never need the NTLM password
				CurrentPortal.LogFull("NTLM Authenticate: no current IDOLServer user called " + sUserName + ", creating new user.");
				try
				{
					Vector vSecurityFields = new Vector();
					vSecurityFields.add(new SecurityField("username", sUserName));
					vSecurityFields.add(new SecurityField("domain",   sDomain));

					Hashtable htFields = new Hashtable();
					htFields.put("InitialRoleName", CurrentSecurity.getKeyByName("BaseRole", "everyone"));

					NTLMUser = new UserInfo(CurrentPortal, sUserName, sUserName, htFields, 0);
					NTLMUser.setSecurityTypeInfo(new String[]{"nt"}, new Vector[]{vSecurityFields});
					NTLMUser.add();
				}
				catch(Exception e)
				{
					CurrentPortal.Log("CheckUser: NTLM Authenticate: Failed to add user - " + e.toString() );
				}

				// now read new user's full entry
				NTLMUser = CurrentPortal.getUserInfo(sUserName);
				CurrentPortal.getRolesObject().addUserToRole(NTLMUser.getUserName(), CurrentSecurity.getKeyByName("BaseRole", "everyone"));
				CurrentPortal.getRolesObject().removeUserFromRole(NTLMUser.getUserName(), CurrentSecurity.getKeyByName("GuestRole", "guest"));
			}

			if( NTLMUser != null )
			{
				//Log in
				CurrentUser = NTLMUser;
				String sTemplateRole = CurrentSecurity.getKeyByName("TemplateRole", "everyone");
				Functions.f_initUser(CurrentPortal, CurrentUser, false, StringUtils.nullToEmpty(request.getRemoteUser()), session, request, sTemplateRole );
				bLogInAsDefaultUser = false;
			}
			else
			{
				CurrentPortal.Log("CheckUser: Couldn't read sucessfully authenticated NTLM user." );
			}
		}
		else
		{
			CurrentPortal.LogFull("CheckUser: NTLM Authentication failed - no username found in Authorization header.");
		}
	}

	if( bLogInAsDefaultUser )
	{
		CurrentUser = CurrentPortal.getDefaultUser( true );
		if( CurrentUser == null )
		{
			String sErrorMsg = "Default User not found.  Please restart the Portal";
			System.out.println(sErrorMsg);
			// throw exception out to error handling page
			throw new PortalException(sErrorMsg);
		}
		else
		{
			Functions.f_initUser( CurrentPortal, CurrentUser, false, "", session, request, null );
		}
	}
}

//This information is used by the portlets to determine whether the current user is a default user.
if (CurrentUser.isDefaultUser() || CurrentUser.isDefaultSetup())
{
	session.setAttribute(CommonConstants.SESSION_ATTRIB_ISDEFAULTUSER, "true");
}
else
{
	session.setAttribute(CommonConstants.SESSION_ATTRIB_ISDEFAULTUSER, "false");
}


//
//User is logged in, move on with Page specific variables
//
UserPageInfo CurrentPage = (UserPageInfo) CurrentUser.getAttribute("CurrentPage");
if(CurrentPage == null)
{
	CurrentPage = CurrentUser.getPageByNumber(StringUtils.atoi( CurrentUser.getExtendedField("PAGE"), 1 ) );
	CurrentUser.setAttribute("CurrentPage", CurrentPage);
}
%>

<%!
private String getDomainFromNTLMHeader(String sHeader)
{
	String sDomain = "";
	if(sHeader != null)
	{
		int nSlashIdx = sHeader.indexOf('\\');
		if(nSlashIdx > -1)
		{
			sDomain = sHeader.substring(0, nSlashIdx);
		}
		else
		{
			int nAtIndex = sHeader.indexOf('@');

			if(nAtIndex > -1)
			{
				sDomain = sHeader.substring(nAtIndex + 1);
			}
		}
	}
	return sDomain.toLowerCase();
}

private String getUsernameFromNTLMHeader(String sHeader)
{
	String sUserName = "";
	if(sHeader != null)
	{
		int nSlashIdx = sHeader.indexOf('\\');
		if(nSlashIdx > -1)
		{
			sUserName = sHeader.substring(nSlashIdx + 1);
		}
		else
		{
			int nAtIndex = sHeader.indexOf('@');

			if(nAtIndex > -1)
			{
				sUserName = sHeader.substring(0, nAtIndex);
			}
		}

	}
	return sUserName.toLowerCase();
}
%>