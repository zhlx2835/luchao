
<%
//
// 'constants' used in this JSP
//
// field names used for UAServer extended fields
final String sNUMCLUSTERFIELDNAME = PORTLET_NAME + "NumClusters";
final String sNUMRESULTFIELDNAME  = PORTLET_NAME + "NumResPerCluster";
// default numbers of clusters and results per cluster do display
final int	nDEFAULT_NUMCLUSTERSTODISPLAY = 6;
final int nDEFAULT_NUMRESULTSTODISPLAY  = 6;
// options displayed in number of clusters/results per cluster select boxes
final int[] naNUMCLUSTERSOPTIONS = new int[]{1,2,4,6,8,10};
final int[] naNUMRESULTSOPTIONS 	= new int[]{1,2,4,6,8,10};

if(service != null)
{
	// Grab configuration parameter details
	String sClusterJobNamesCSV  = (String)service.getParameter("ClusterJobNames");
	String sClusterJobTitlesCSV = (String)service.getParameter("ClusterJobTitles");

	String[] asClusterJobNames = StringUtils.split(sClusterJobNamesCSV, ",");
	String[] asClusterJobTitle = StringUtils.split(sClusterJobTitlesCSV, ",");

	//
	// Create query connection objects
	//

	// UAServer.
	AciConnection uaConnection = new AciConnection(service.getIDOLService().getUserConnectionDetails());

	// Classification server
	AciConnection classConnection = new AciConnection(service.getIDOLService().getCategoryConnectionDetails());

	// Declare portlet variables
	//

	// Get user details
	String sUsername = ((AutonomyPortalUser)service.getUser()).getName();

	// Get form & parameter names using 'fully-qualified' parameter names to avoid collisions
	// between portlets since they all share this URL.

	String fDisplayOptions	= service.makeFormName("fDisplayOptions");
	String fJobChoice		= service.makeFormName("fJobChoice");
	String mMethod			= service.makeParameterName("mMethod");
	String mNumClusters 	= service.makeParameterName("mNumClusters");
	String mNumResults 		= service.makeParameterName("mNumResults");
	String mJobName 		= service.makeParameterName("mJobName");

	// display options
	int nNumClustersToDisplay = 0;
	int nNumResultsToDisplay  = 0;

	// the name of the cluster job to display
	String sSelectedClusterJobName = "";

	// build up autosuggest URL, common to all cluster results
	StringBuffer sbAbsSuggestURL = new StringBuffer( service.makeLink("autosuggest.jsp") );
	//add session variable names info
	sbAbsSuggestURL.append("?username=");
	sbAbsSuggestURL.append( StringUtils.encryptString(sUsername) );
	sbAbsSuggestURL.append("&threshold=60");
	sbAbsSuggestURL.append("&numresult=6");

	String sAbsSuggestURL = sbAbsSuggestURL.toString();

	if(uaConnection != null)
	{
		//
		// Start portlet processing - 4 steps
		//							- try reading request parameters ( number of clusters and number of results/cluster
		//							  to display). If these are present, set these as extended fields on user
		//							- read user details and extract number of clusters and number of results/cluster preferences
		//							- retrieve cluster info from server
		//							- display cluster results
		//


		//
		//	Grab request parameters and determine if any display options were set last time this page was viewed
		//
		try
		{
			sSelectedClusterJobName = service.getRequestParameter(mJobName);
			if( sSelectedClusterJobName == null || sSelectedClusterJobName.length() == 0 )
			{
				// set first job in job names list as default job to view
				sSelectedClusterJobName = asClusterJobNames[0];
			}

			String svMethod			= service.getRequestParameter(mMethod);

			if( svMethod != null )
			{
				if(svMethod.equals("SetDisplayOptions") )
				{
					// set new values as user extended fields
					String svNumClusters 	= service.getRequestParameter(mNumClusters);
					String svNumResults 	= service.getRequestParameter(mNumResults);

					AciAction aciaSetExtFields = new AciAction("UserEdit");
					aciaSetExtFields.setParameter(new ActionParameter("USERNAME",sUsername));

					if( svNumClusters != null && !svNumClusters.equals("") )
					{
						aciaSetExtFields.setParameter(new ActionParameter("FIELD"+sNUMCLUSTERFIELDNAME, svNumClusters));
					}
					if( svNumResults != null && !svNumResults.equals("") )
					{
						aciaSetExtFields.setParameter(new ActionParameter("FIELD"+sNUMRESULTFIELDNAME, svNumResults));
					}

					AciResponse acirSetExtFieldResult = uaConnection.aciActionExecute(aciaSetExtFields);

					if(acirSetExtFieldResult != null && acirSetExtFieldResult.checkForSuccess() )
					{
					}
					else
					{
						// failed to set extended fields
					}
				}
			}
		}
		catch(Exception e)
		{
		}

		//
		// Read user details
		//
		AciAction aciaReadUser = new AciAction("UserRead");
		aciaReadUser.setParameter(new ActionParameter("USERNAME",sUsername));
		aciaReadUser.setParameter(new ActionParameter("DeferLogin",true));

		AciResponse acirUserReadResult = uaConnection.aciActionExecute(aciaReadUser);

		if(acirUserReadResult != null && acirUserReadResult.checkForSuccess() )
		{
			// grab display option extended fields
			AciResponse acirNumClusters = acirUserReadResult.findFirstOccurrence(sNUMCLUSTERFIELDNAME);
			AciResponse acirNumResults  = acirUserReadResult.findFirstOccurrence(sNUMRESULTFIELDNAME);

			if( acirNumClusters != null )
			{
				nNumClustersToDisplay = acirNumClusters.getTagValue(sNUMCLUSTERFIELDNAME, 0);
			}
			if( acirNumClusters != null )
			{
				nNumResultsToDisplay = acirNumResults.getTagValue(sNUMRESULTFIELDNAME, 0);
			}
		}
		else
		{
			// failed to read user
		}

		// these fields will not exist if this user has not set them so apply default value
		if(nNumClustersToDisplay == 0 )
		{
			nNumClustersToDisplay = nDEFAULT_NUMCLUSTERSTODISPLAY;
		}
		if(nNumResultsToDisplay == 0 )
		{
			nNumResultsToDisplay = nDEFAULT_NUMRESULTSTODISPLAY;
		}

		//
		// Retrieve cluster results
		//
		if( classConnection != null )
		{
			AciAction aciaGetClusters = new AciAction("ClusterResults");
			aciaGetClusters.setParameter(new ActionParameter("SourceJobName", sSelectedClusterJobName));
			aciaGetClusters.setParameter(new ActionParameter("NumClusters", nNumClustersToDisplay));
			aciaGetClusters.setParameter(new ActionParameter("NumResults", nNumResultsToDisplay));
			aciaGetClusters.setParameter(new ActionParameter("DREAnyLanguage", (String)service.getParameter("ResultsInAnyLanguage")));
			aciaGetClusters.setParameter(new ActionParameter("DREOutputEncoding", "utf8"));

			AciResponse acirGetClustersResult = classConnection.aciActionExecute(aciaGetClusters);
			//
			// Now display. Start by displaying cluster results if any and then have input form for display options at the bottom
			//

			// Job selection form
%>
			<table cellspacing="5"><tr><td>
			<form name="<%= fJobChoice %>" action="<%= service.makeFormActionLink(" ") %>" method="POST">
				<%= service.makeAbstractFormFields() %>
				<input type="hidden" name="<%= mMethod %>" value="SetJobName">

				<font class="<%= service.getCSSClass(service.TEXT_1) %>">
					&nbsp;<b><%=rb.getString("clusterDisplay_include.selectCat")%></b>:
				</font>
				<font class="<%= service.getCSSClass(service.TEXT_1) %>">
					<select name="<%= mJobName %>" onChange="document.<%= fJobChoice %>.submit()">
<%
						for(int nLoop = 0; nLoop < asClusterJobNames.length ; nLoop++ )
						{
							String sSelected = "";
							if( sSelectedClusterJobName.equals(asClusterJobNames[nLoop]) )
							{
								sSelected = "selected=\"selected\"";
							}
%>
							<option value="<%= StringUtils.XMLEscape(asClusterJobNames[nLoop]) %>" <%= sSelected %>><%= StringUtils.XMLEscape(asClusterJobTitle[nLoop]) %></option>
<%
						}
%>
					</select>
				</font>
			</form>
			</td></tr></table>

<%
			// Display cluster results
			if( acirGetClustersResult != null && acirGetClustersResult.checkForSuccess() )
			{
%>
				<table cellspacing="5">
<%
				// get first cluster
				AciResponse acirSingleCluster = acirGetClustersResult.findFirstOccurrence("autn:cluster");

				// loop through clusters
				while( acirSingleCluster != null )
				{
					// print cluster title
					String sClusterTitle = acirSingleCluster.getTagValue("autn:title", "Unknown");
%>
					<tr>
						<td colspan="3">
							<img src="<%= sImageURL %>/cluster.gif" alt="" >&nbsp;
							<font class="<%= service.getCSSClass(PortalService.TEXT_1) %>">
								<b><%= StringUtils.XMLEscape(sClusterTitle) %></b>
							</font>
						</td>
					</tr>
<%
					// get first cluster result
					AciResponse acirSingleResult = acirSingleCluster.findFirstOccurrence("autn:doc");

					// loop through cluster results
					while( acirSingleResult != null )
					{
						String sResultTitle = acirSingleResult.getTagValue("autn:title", "Unknown");
						String sReference	= acirSingleResult.getTagValue("autn:ref", "");
						String sSummary		= acirSingleResult.getTagValue("autn:summary", "");

						// autosuggest url
						StringBuffer sbAutoSuggestURL = new StringBuffer(sAbsSuggestURL);
						sbAutoSuggestURL.append("&url=");
						sbAutoSuggestURL.append(URLEncoder.encode(sReference));
%>
						<tr>
							<td>
								&nbsp;&nbsp;&nbsp;
							</td>
							<td>
								<img src="<%= sImageURL %>/<%= IMAGE_NAME %>" alt="">
							</td>
							<td>
								<a href="<%= StringUtils.XMLEscape(sbAutoSuggestURL.toString()) %>" target= "_blank" title="<%= StringUtils.XMLEscape(sSummary) %>">
									<font class="<%= service.getCSSClass(PortalService.TEXT_1) %>">
										<%= sResultTitle %>
									</font>
								</a>
							</td>
						</tr>
<%
						// move to next result
						AciResponse acirNext = acirSingleResult.next();
						acirSingleResult = acirNext != null ? acirNext.findFirstOccurrence("autn:doc") : null;
					}	//while( acioSingleResult != null )


					// move to next cluster
					AciResponse acirClusterNext = acirSingleCluster.next();
					acirSingleCluster = acirClusterNext != null ? acirClusterNext.findFirstOccurrence("autn:cluster") : null;
				}	//while( acioSingleCluster != null )


				// Display options input form
%>
			</table>
			<br/>
			<form name="<%= fDisplayOptions %>" action="<%= service.makeFormActionLink(" ") %>" method="POST" STYLE="margin: 0px; padding: 0px;">
				<%= service.makeAbstractFormFields() %>
				<input type="hidden" name="<%= mMethod %>" value="SetDisplayOptions">
				<input type="hidden" name="<%= mJobName %>" value="<%= sSelectedClusterJobName %>">
				<table width=320 border="0" cellspacing="5">
					<tr>
						<td colspan="3">
							<font class="<%= service.getCSSClass(service.TEXT_1) %>">
								<b><%=rb.getString("clusterDisplay_include.displayOptions")%></b>:
							</font>
						</td>
					</tr>
					<tr>
						<td colspan="3">
							<table width="100%" border="0">
								<tr>
									<td>
										<font class="normalbold">
											<%=rb.getString("clusterDisplay_include.numOfClusters")%>
										</font>
									</td>
									<td align="right">
										<%= HTMLUtils.createSelect(mNumClusters, naNUMCLUSTERSOPTIONS, nNumClustersToDisplay) %>
									</td>
								</tr>
							</table>
						</td>
					</tr>

					<tr>
						<td colspan="3">
							<table width="100%" border="0">
								<tr>
									<td>
										<font class="normalbold">
											<%=rb.getString("clusterDisplay_include.numOfResults")%>
										</font>
									</td>
									<td align="right">
										<%= HTMLUtils.createSelect(mNumResults, naNUMRESULTSOPTIONS, nNumResultsToDisplay) %>
									</td>
								</tr>
							</table>
						</td>
					</tr>

					<tr>
						<td colspan="3" align="right">
							<a class="textButton" title="Submit new preferences" href="javascript:document['<%= fDisplayOptions %>'].submit();">
								<%=rb.getString("clusterDisplay_include.submit")%>
							</a>
						</td>
					</tr>
				</table>
			</form>
<%

			}
			else
			{
				// no clusters so display an error message
%>
				<font class="normal">
					<%=rb.getString("clusterDisplay_include.noClusters")%> <%= sSelectedClusterJobName %> <%=rb.getString("clusterDisplay_include.noClusters.contactWebAdmin")%>
				</font>
<%
			}
		}
		else	//if( classConnection != null )
		{
		%>
			<font class="normal">
				<%=rb.getString("autonomy2DMap.error.internalError")%> <%=rb.getString("error.couldNotContactCS")%><br/>
				<%=rb.getString("autonomy2DMap.error.internalError.contactWebAdmin")%>
			</font>
		<%
		}
	}
	else	//if( uaConnection != null )
	{
	%>
		<font class="normal">
			<%=rb.getString("autonomy2DMap.error.internalError")%> <%=rb.getString("autonomyCommunity.error.UANotFound")%><br/>
			<%=rb.getString("autonomy2DMap.error.internalError.contactWebAdmin")%>
		</font>
	<%
	}
}
else	//if(service != null)
{
%>
	<font class="normal">
		<%=rb.getString("autonomy2DMap.error.internalError")%> <%=rb.getString("autonomy2DMap.error.internalError.erroMsg")%><br/>
		<%=rb.getString("autonomy2DMap.error.internalError.contactWebAdmin")%>
	</font>
<%
}
%>