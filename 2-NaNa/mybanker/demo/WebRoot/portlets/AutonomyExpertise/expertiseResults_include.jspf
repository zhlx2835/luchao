
<%
/**
* expertiseResults_include.jsp
* Given an users agent, displays similar agents
* Variables required:
* service				-			PortalService object
* acioHit				-			aciObject, community query hit entry
* sUAHost				-			UAServer host name or IP
* sUAPort				-			UAServer port
* sDREHost				-			DREServer host name or IP
* sDREPort				-			DREServer port
* sUsername				-			the name of the user
* sSecString			-			the UAServer generated security string for this user
* saAfentNames			-			an array of Strings containing the names of this user's existing agents
*/

StringBuffer sbCommonURL = new StringBuffer();
sbCommonURL.append("?username=")
		   .append( StringUtils.encryptString(sUsername) );

while(acioHit != null)
{
	// grab info
	String sOthersAgentName = acioHit.getTagValue("NAME", 			"");
	String sOthersUsername	= acioHit.getTagValue("USERNAME", 		"-");
	String sOthersEmail     = acioHit.getTagValue("EMAILADDRESS", 	"");
	String sType     		= acioHit.getTagValue("autn:database", 		"");

	boolean bProfile = false;
	if( sType.equalsIgnoreCase("profile") )
	{
		bProfile = true;
		sOthersAgentName = "<Profile>";
	}

	// create a name for cloned agent that is different to all the users current agent names
	String sNewAgentName = StringUtils.makeUniqueElement(saAgentNames, sOthersAgentName);

	StringBuffer sbAgentCreateURL = new StringBuffer( service.makeLink("CopyAgent.jsp") );
	sbAgentCreateURL.append(sbCommonURL.toString())
					.append("&agentname=")
					.append(HTTPUtils.URLEncode(sOthersAgentName, "utf8"))
					.append("&agentowner=")
					.append(HTTPUtils.URLEncode(sOthersUsername, "utf8"))
					.append("&newagentname=")
					.append(HTTPUtils.URLEncode(sNewAgentName, "utf8"));

	StringBuffer sbAgentViewResultsURL = new StringBuffer( service.makeLink("ShowAgent.jsp") );
	sbAgentViewResultsURL.append(sbCommonURL.toString())
						 .append("&agentname=")
						 .append(HTTPUtils.URLEncode(sOthersAgentName, "utf8"))
						 .append("&agentowner=")
						 .append(HTTPUtils.URLEncode(sOthersUsername, "utf8"));

	StringBuffer sbProfileViewResultsURL = new StringBuffer( service.makeLink("ShowProfile.jsp") );
	sbProfileViewResultsURL.append(sbCommonURL.toString())
						   .append("&profileowner=")
						   .append(HTTPUtils.URLEncode(sOthersUsername, "utf8"));

%>
	<!-- community result row -->
	<tr>
		<td>
			<font class="<%= service.getCSSClass(PortalService.TEXT_1) %>">
				<%= StringUtils.XMLEscape(sOthersAgentName) %>&nbsp;
			</font>
		</td>
		<td>
			<font class="<%= service.getCSSClass(PortalService.TEXT_1) %>">
<%
				if( StringUtils.strValid(sOthersEmail) )
				{
%>
					<a href="mailto:<%= StringUtils.XMLEscape(sOthersEmail) %>">
						<%= StringUtils.XMLEscape(sOthersUsername) %>
					</a>
					&nbsp;
<%
				}
				else
				{
%>
					<%= StringUtils.XMLEscape(sOthersUsername) %>
<%
				}
%>
			</font>
		</td>
<%
		if(bProfile)
		{
%>
			<td>
				<a class="textButton" title="View this profile's results" href="<%= sbProfileViewResultsURL.toString() %>" target= "_blank">
					<%=rb.getString("expertiseResults_include.view")%>
				</a>&nbsp;
			</td>
<%
		}
		else
		{
%>
			<td>
				<a class="textButton" title="View this agent's results" href="<%= sbAgentViewResultsURL.toString() %>" target= "_blank">
					<%=rb.getString("expertiseResults_include.view")%>
				</a>&nbsp;
				<a class="textButton" title="Clone this agent" href="<%= sbAgentCreateURL.toString() %>" target= "_blank">
					<%=rb.getString("expertiseResults_include.copy")%>
				</a>&nbsp;
			</td>
<%
		}
%>
	</tr>
<%
	// move on to next agent hit
	acioHit = nextHit(acioHit, "autn:hit");
};		// while(acioHit != null)
%>
<%!
private AciResponse nextHit(AciResponse acioEntry, String sHitName)
{
	AciResponse acioNextHit = null;
	if(acioEntry != null)
	{
		// should simply be next sibling entry in linked list...
		acioNextHit = acioEntry.next();

		//... but check name to be sure
		if(acioNextHit != null)
		{
			String sEntryName = acioNextHit.getName();
			if(sEntryName != null && !sEntryName.equals(sHitName))
			{
				// not a hit entry:
				// move to immediate sibling and try to find next hit from there
				AciResponse acioNextEntry = acioNextHit.next();
				if(acioNextEntry != null)
				{
					// findFirstOccurrence will return acioNextEntry itself if it is a hit
					acioNextHit = acioNextEntry.findFirstOccurrence("autn:hit");
				}
				else
				{
					// end of hits and siblings list so just return null
					acioNextHit = null;
				}
			}
		}
	}
	return acioNextHit;
}
%>