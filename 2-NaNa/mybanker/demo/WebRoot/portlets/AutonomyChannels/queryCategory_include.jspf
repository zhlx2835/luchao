<%@ page import="com.autonomy.aci.exceptions.AciException"%>
<%@ page import="com.autonomy.aci.ActionParameter"%>
<%@ page import="com.autonomy.aci.businessobjects.User"%>
<%@ page import="com.autonomy.aci.businessobjects.Privilege"%>
<%@ page import="java.util.ArrayList"%>
<%@ page import="java.util.Iterator"%>

<%
try
{
	StringBuffer sbParams = new StringBuffer("summary,print,outputencoding");
	StringBuffer sbValues = new StringBuffer("context,all,utf8");
	String userSecurityInfo = ((User)session.getAttribute(ChannelsConstants.SESSION_ATTRIB_USER)).getSecurityInfo();
    // Get user details    
    String sUsername = (service.getUser()).getName();
	if(StringUtils.strValid(userSecurityInfo))
	{
		sbParams.append(",securityinfo");
		sbValues.append(",").append(userSecurityInfo);
	}
	// if we are not showing results in any language, we must filter out those results that are 
	// not in the category's language as the category query is always performed with "anylanguage=true"
	if(!StringUtils.isTrue((String)service.getParameter("ResultsInAnyLanguage")))
	{
		sbParams.append(",matchlanguage");
		sbValues.append(",").append(category.getLanguage());
	}

	// filter the databases searched with respect to the one's that this particular user has
	// access to 	
	String sDBMatch = filterUserDBs((User)session.getAttribute(ChannelsConstants.SESSION_ATTRIB_USER), 
																	category, 
																	(String)service.getParameter("DatabasePrivilegeName")
																  );
	
	// only do category query if there are some category databases that the user can see
	if(StringUtils.strValid(sDBMatch))
	{
		sbParams.append(",databasematch");
		sbValues.append(",").append(sDBMatch);

		ArrayList alGetCategResultsParams = new ArrayList();
        alGetCategResultsParams.add(new ActionParameter("username", sUsername));
		alGetCategResultsParams.add(new ActionParameter("params", sbParams.toString()));
		alGetCategResultsParams.add(new ActionParameter("values", sbValues.toString()));

		resultList = idol.useChannelsFunctionality().getCategoryResults(category, alGetCategResultsParams);
	}	
}
catch(AciException acie)
{
	session.setAttribute(ChannelsConstants.SESSION_ATTRIB_ERROR_MESSAGE, "There was an error in retrieving the results for " + category.getName() + ". Error is - " + acie.getMessage());		
}
%>

<%!
private String filterUserDBs(User user, Category category, String sDBPrivilege)
{
	StringBuffer sbDatabaseMatch = new StringBuffer();

	if(user != null && category != null)
	{
		ArrayList alUserDBs = readDBPrivilege(user, sDBPrivilege);
		Iterator itCatDBs = category.getDatabases().iterator();
        
        //if user has refined the search databases
		if(itCatDBs.hasNext()){
			while(itCatDBs.hasNext())
			{
				String sCatDB = (String)itCatDBs.next();
				if(alUserDBs.contains(sCatDB))
				{
					// database is in both category and user lists so can be queried
					sbDatabaseMatch.append(sCatDB).append("+");
				}
			}
		}
		else{   //if user did not refine the databases, use all the databases which user has privilege
			Iterator itUserDBs = alUserDBs.iterator();
			while(itUserDBs.hasNext())
			{
				String sUserDB = (String)itUserDBs.next();
				sbDatabaseMatch.append(sUserDB).append("+");

			}
		}
		// strip trailing comma
		if(sbDatabaseMatch.length() > 2)
		{
			sbDatabaseMatch.deleteCharAt(sbDatabaseMatch.length()-1);
		}
	}

	return sbDatabaseMatch.toString();
}

private ArrayList readDBPrivilege(User user, String sDBPrivilege)
{
	ArrayList alDBs = new ArrayList();

	Iterator itPrivileges = user.getPrivileges().iterator();
	while(itPrivileges.hasNext())
	{
		Privilege privilege = (Privilege)itPrivileges.next();
		if(privilege.getPrivilegeName().equalsIgnoreCase(sDBPrivilege))
		{
			alDBs = privilege.getValues();
			break;		
		}
	}

	return alDBs;
}
%>
