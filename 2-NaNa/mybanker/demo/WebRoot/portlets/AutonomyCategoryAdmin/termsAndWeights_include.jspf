<%@ page import="java.io.*" %>
<%@ page import="java.util.*"%>
<%@ page import="java.net.*"%>
<%@ page import="com.autonomy.client.*"%>
<%@ page import="com.autonomy.portlet.*"%>
<%@ page import="com.autonomy.utilities.*"%>
<%@ page import="com.autonomy.aci.constants.IDOLConstants"%>

<%
// get terms and weights for category
TermsNWeights generatedTNW = category.getGeneratedTermsAndWeights();
TermsNWeights modifiedTNW  = category.getModifiedTermsAndWeights();
TermsNWeights queryTNW  	 = category.getQueryTermsAndWeights();
Set generatedTerms 	= generatedTNW.getTerms();
Set modifiedTerms 	= modifiedTNW.getTerms();
Set queryTerms 			= queryTNW.getTerms();
String[] saGenTerms 	= (String[])generatedTerms.toArray(new String[]{});
String[] saModTerms 	= (String[])modifiedTerms.toArray(new String[]{});
String[] saQueryTerms = (String[])queryTerms.toArray(new String[]{});

int nTotalTermCnt = saGenTerms.length + saModTerms.length + CATConstants.NUM_NEW_TERMS;
%>
	<!-- request parameters for javascript:submitModifiedTerms() to populate -->
	<input type="hidden" name="<%= service.makeParameterName(CATConstants.REQUEST_PARAM_TERMS) %>" value="" />
	<input type="hidden" name="<%= service.makeParameterName(CATConstants.REQUEST_PARAM_WEIGHTS) %>" value="" />

	<script name="JavaScript" type="text/javascript">
	<!--
		var nIncrementTerm = -1;
		var nIncrementIncrease = 1;
		var bOKToSelect = 1;
		var nTotalElements = 0;
		var intvl = setInterval("incrementLoop()", 75);
		var aTerms = new Array(<%=nTotalTermCnt%>);
		var aOriginalGenWeights = new Array(<%=nTotalTermCnt%>);

		<%-- turns off selection so you can not drag over the end of a slider --%>
		document.onselectstart=onSelectHandler;

		function onSelectHandler()
		{
			if (bOKToSelect == 1)
				return true;
			else
				return false;
		}

		function strStripNonAlpha(str)
		{
			var strNew = "";

			for (nTermIdx=0; nTermIdx<str.length; nTermIdx++)
			{
				var thisChar = str.charAt(nTermIdx);
				var thisCharCode = str.charCodeAt(nTermIdx);

				if ( thisCharCode >= 65 && thisCharCode <= 90)
				{
					strNew += thisChar;
				}
				else if ( thisCharCode >= 97 && thisCharCode <= 122)
				{
					strNew += thisChar.toUpperCase();
				}
			}

			return strNew;
		}

		function strStripNonNumeric(str)
		{
			var strNew = "";

			for (nTermIdx=0; nTermIdx<str.length; nTermIdx++)
			{
				var thisChar = str.charAt(nTermIdx);
				var thisCharCode = str.charCodeAt(nTermIdx);

				if ( thisCharCode >= 48 && thisCharCode <= 57)
				{
					strNew += thisChar;
				}
			}

			return strNew;
		}

		function checkTermValue(nTerm)
		{
			var term = eval("document.cattestresults.term" + nTerm + ".value");
			var newTerm = strStripNonAlpha(term);

			eval("document.cattestresults.term" + nTerm + ".value = '" + newTerm + "'");
		}

		function checkWeightValue(nTerm)
		{
			var weight = eval("document.cattestresults.weight" + nTerm + ".value");
			var newWeight = strStripNonNumeric(weight);

			eval("document.cattestresults.weight" + nTerm + ".value = '" + newWeight + "'");

			setSliderWeight(nTerm, newWeight);
		}

		function increment(nTerm, nIncrease)
		{

			var vCurrentSliderWidth = document.getElementById("slider" + nTerm).style.width;
			var nCurrentWidth = eval(vCurrentSliderWidth.substring(0, vCurrentSliderWidth.length-2));

			var vOriginalSliderWidth = document.getElementById("sliderbg" + nTerm).style.width;
			var nOriginalWidth = eval(vOriginalSliderWidth.substring(0, vOriginalSliderWidth.length-2));

			var nNewVal = nCurrentWidth + nIncrease;

			if (nIncrease == -1 && nNewVal <= 1)
				nNewVal = 0;

			if (nNewVal >= <%=CATConstants.MAX_SLIDER_WIDTH%>)
				nNewVal = <%=CATConstants.MAX_SLIDER_WIDTH%>-1;

			setSliderWidth(nTerm, nNewVal);

			if (nOriginalWidth == nNewVal)
			{
				setTextWeight(nTerm, aOriginalGenWeights[nTerm]);
			}
			else
			{
				setTextWidth(nTerm, nNewVal);
			}
		}

		function sliderMoveHandler(nTerm)
		{
			bOKToSelect = 0;

			var x = new Number(window.event.offsetX) + 1;

			if (window.event.button == 1 && x >= 0)
			{
				setTextWidth(nTerm, x);
				setSliderWidth(nTerm, x);
			}
		}

		function setSliderWeight(nTerm, nWeight)
		{
			if (nWeight < 10)
			{
				nWeight = 10;
			}

			var nWidth = Math.floor((33 * ( Math.log(nWeight)/Math.LN10 - 1 ) ));

			if (nWidth > 99)
				nWidth = 99;

			if (nWidth < 0)
				nWidth = 0;

			setSliderWidth(nTerm, nWidth);
		}

		function setSliderWidth(nTerm, nWidth)
		{
			if (nWidth >= 0)
			{
				document.getElementById("slider" + nTerm).style.width = nWidth


				var nTempOriginalWidth = document.getElementById("sliderbg" + nTerm).style.width;
				var nOriginalWidth = eval(nTempOriginalWidth.substring(0, nTempOriginalWidth.length-2))

				if (nWidth == nOriginalWidth)
				{
					setSliderColor(nTerm, "<%=CATConstants.ORIGINALCOLOR%>");
				}
				else
				{
					setSliderColor(nTerm, "<%=CATConstants.CHANGEDCOLOR%>");
				}
			}
		}

		function setTextWidth(nTerm, nWidth)
		{
			var nOriginalWidth = document.getElementById("sliderbg" + nTerm).style.pixelWidth;

			if (nWidth == nOriginalWidth)
			{
				// snap back to original weight
				// otherwise we get an approximate value due to pixellation
				setTextWeight(nTerm, aOriginalGenWeights[nTerm]);
			}
			else
			{
				var nNewWeight = Math.floor(Math.pow(10,nWidth/33 + 1));

				if (nNewWeight == 10)
					nNewWeight = 0;

				setTextWeight(nTerm, nNewWeight);
			}
		}

		function setTextWeight(nTerm, nWeight)
		{
			eval("document.cattestresults.weight" + nTerm + ".value = nWeight");

		}

		function incrementLoop()
		{
			var nTermCopy = nIncrementTerm;
			var nIncreaseCopy = nIncrementIncrease;

			if (nTermCopy != -1)
			{
				increment(nTermCopy, nIncreaseCopy);
			}
		}

		function setSliderColor(nTerm, sColor)
		{
			document.getElementById("slider" + nTerm).style.backgroundColor=sColor;
		}

		function submitModifiedTerms()
		{
			var sTerms = "";
			var sWeights = "";
			var nTermIdx=0;

			// loop through existing terms and check for modified ones and append
			for (;nTermIdx<nTotalElements - <%=CATConstants.NUM_NEW_TERMS%>;nTermIdx++)
			{
				if (eval("document.cattestresults.weight" + nTermIdx + ".value") != aOriginalGenWeights[nTermIdx])
				{
					if (sTerms != "")
					{
						sTerms += "<%= IDOLConstants.LIST_SEPARATOR %>";
						sWeights += "<%= IDOLConstants.LIST_SEPARATOR %>";
					}

					sTerms += aTerms[nTermIdx];
					sWeights += eval("document.cattestresults.weight" + nTermIdx + ".value");
				}
			}

			// loop through new terms and append
			for (;nTermIdx<nTotalElements;nTermIdx++)
			{
				if (eval("document.cattestresults.term" + nTermIdx + ".value") != "")
				{
					if (sTerms != "")
					{
						sTerms += "<%= IDOLConstants.LIST_SEPARATOR %>";
						sWeights += "<%= IDOLConstants.LIST_SEPARATOR %>";
					}

					sTerms += eval("document.cattestresults.term" + nTermIdx + ".value");
					sWeights += eval("document.cattestresults.weight" + nTermIdx + ".value");
				}
			}

			if (sTerms == "")
				sTerms = "";

			if (sWeights == "")
				sWeights = "";

			document.cattestresults.<%= service.makeParameterName(CATConstants.REQUEST_PARAM_TERMS) %>.value = sTerms;
			document.cattestresults.<%= service.makeParameterName(CATConstants.REQUEST_PARAM_WEIGHTS) %>.value = sWeights;

			document.cattestresults.submit();
		}
	-->
	</script>

	<table cellspacing="5">
		<!-- terms and weights -->
		<tr>
			<td colspan="4" align="left">
				<strong><%=rb.getString("termsAndWeights_include.TAW")%></strong>
			</td>
		</tr>
		<tr>
			<td>
				<b><%=rb.getString("termsAndWeights_include.term")%></b>
			</td>
			<td colspan="2">
				<center><b><%=rb.getString("termsAndWeights_include.weight")%></b></center>
			</td>
			<td>
				<b>
					<span style="position:relative;width:25;font-size:9px">
						10
					</span>
					<span style="position:relative;width:30;font-size:9px">
						100
					</span>
					<span style="position:relative;width:31;font-size:9px">
						1000
					</span>
					<span style="position:relative;width:1;font-size:9px">
						10000
					</span>
					<br />
					<span style="position:relative;width:3;height:6;font-size:1px">
					</span>
					<span style="position:relative;width:30;height:6;font-size:1px;border-left:solid black 1px">
					</span>
					<span style="position:relative;width:33;height:6;font-size:1px;border-left:solid black 1px">
					</span>
					<span style="position:relative;width:32;height:6;font-size:1px;border-left:solid black 1px">
					</span>
					<span style="position:relative;width:1;height:6;font-size:1px;border-left:solid black 1px">
					</span>
				</b>
			</td>
		</tr>
<%
		int nTermIdx=0;
		int nPrint = 0;

		while (nTermIdx < (nTotalTermCnt))
		{
			String sThisTerm = "";
			int nThisGenWeight = 0;
			int nThisModWeight = 0;
			boolean bNewTerm = false;
			boolean bPrint = true;

			// still in original generated terms world
			if (nTermIdx < saGenTerms.length)
			{
				sThisTerm = saGenTerms[nTermIdx];
				nThisGenWeight = generatedTNW.getTermWeighting(sThisTerm);
				nThisModWeight = modifiedTNW.getTermWeighting(sThisTerm);
				// set modified weight to generated weight if it does not already have a value
				if(nThisModWeight == 0)
				{
					nThisModWeight = nThisGenWeight;
				}
			}
			// now loop through modified terms and print out the ones on that don't exist in
			// the generated term list (ie ones that have been added subsequently)
			else if (nTermIdx < (saGenTerms.length + saModTerms.length))
			{
				sThisTerm = saModTerms[nTermIdx-saGenTerms.length];
				if(!generatedTerms.contains(sThisTerm))
				{
					bPrint = true;
					nThisGenWeight = 0;
					nThisModWeight = modifiedTNW.getTermWeighting(sThisTerm);
				}
				else
				{
					bPrint = false;
				}
			}
			else if (nTermIdx < (nTotalTermCnt))
			{
				bNewTerm = true;

				if (nTermIdx == (saGenTerms.length + saModTerms.length))
				{
%>
					<tr>
						<td colspan="2">
							<b><%=rb.getString("termsAndWeights_include.newTerms")%></b>
						</td>
					</tr>
<%
				}
			}

			if (bPrint)
			{
				// convert the weight to a width using a logarithmic scale
				int nThisGenWidth = weightToWidth(nThisGenWeight);
				int nThisModWidth = weightToWidth(nThisModWeight);
%>
				<script>
					aTerms[<%=nPrint%>] = "<%=sThisTerm%>";
					aOriginalGenWeights[<%=nPrint%>] = <%=nThisGenWeight%>;
				</script>
				<tr>
					<td>
<%
						if (bNewTerm)
						{
%>
							<input
								type="text"
								name="term<%=nPrint%>"
								value="<%=sThisTerm%>"
								size="10"
								style="font-size:13px"
								maxlength="20"
								onKeyUp="javascript:checkTermValue(<%=nPrint%>)"
							/>
<%
						}
						else
						{
%>
							<%=sThisTerm%>&nbsp;
<%
						}
%>
					</td>
					<td>
						<input
							type="text"
							name="weight<%=nPrint%>"
							value="<%=nThisModWeight%>"
							size="3"
							style="font-size:13px"
							maxlength="5"
							onKeyUp="javascript:checkWeightValue(<%=nPrint%>)"
						/>
					</td>
					<td>
						<!-- increment/decrement term weighting buttons -->
						<table cellpadding="0" cellspacing="0" bgcolor="black">
							<tr>
								<td>
									<img
										onMouseOut="javascript:nIncrementTerm=-1"
										onMouseUp="javascript:nIncrementTerm=-1"
										onMouseDown="javascript:nIncrementTerm=<%=nPrint%>;nIncrementIncrease=1;increment(<%=nPrint%>,1)"
										src="<%= imageURL %>/plus.gif"
									/>
								</td>
							</tr>
							<tr>
								<td>
									<img
										onMouseOut="javascript:nIncrementTerm=-1"
										onMouseUp="javascript:nIncrementTerm=-1"
										onMouseDown="javascript:nIncrementTerm=<%=nPrint%>;nIncrementIncrease=-1;increment(<%=nPrint%>,-1)"
										src="<%= imageURL %>/minus.gif"
									/>
								</td>
							</tr>
						</table>
					</td>
					<td>
<%
						String sStartColor = (nThisGenWeight == nThisModWeight) ? (CATConstants.ORIGINALCOLOR) : (CATConstants.CHANGEDCOLOR);
%>
						<%--outside border--%>
						<div style="position:absolute;height:13;width:<%=CATConstants.MAX_SLIDER_WIDTH%>;border:outset white 1px;z-index:3;font-size:1px">
						</div>
						<%--top marker to show generated weight--%>
						<div id="sliderbg<%=nPrint%>"
								 style="position:absolute;height:4;width:<%=nThisGenWidth%>;background-color:<%=CATConstants.TOPBARCOLOR%>;z-index:4;font-size:1px">
						</div>
						<%--modified position marker--%>
						<div id="slidermk<%=nPrint%>"
								 style="position:absolute;height:13;width:<%=nThisModWidth%>;border-right:dashed black 1px;z-index:3;font-size:1px">
						</div>
						<%--slider--%>
						<div id="slider<%=nPrint%>"
								 style="position:relative;height:13;width:<%=nThisModWidth%>;background-color:<%=sStartColor%>;z-index:2;font-size:1px">
						</div>
					</td>
				</tr>
<%
				nPrint++;
			}
			nTermIdx++;
		}
%>
		<script name="JavaScript" type="text/javascript">
		<!--
			nTotalElements = <%=nPrint%>;
		-->
		</script>
	</table>

<%!
private int weightToWidth(int nWeight)
{
	int nWidth = 0;
	if(nWeight > 0)
	{
		nWidth = (int)(33 * ( Math.log( (double)nWeight)/Math.log(10) - 1 ) );
	}
	return nWidth;
}
%>